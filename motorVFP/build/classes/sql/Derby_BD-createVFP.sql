--Emulador Fiscal Printer
--The Factory HKA C.A
-- Database initial script for DERBY
-- v1.0
CREATE TABLE APPLICATIONS (
    ID VARCHAR(256) NOT NULL,
    NAME VARCHAR(1024) NOT NULL,
    VERSION VARCHAR(1024) NOT NULL,
    PRIMARY KEY (ID)
);
--Identificacion de la Aplicacion
INSERT INTO APPLICATIONS(ID, NAME, VERSION) VALUES('VFP00001', 'VFP HKA Emulator', 'V-3.0.0.0');

CREATE TABLE RESOURCES (
    ID VARCHAR(256) NOT NULL,
    NAME VARCHAR(1024) NOT NULL,
    RESTYPE INTEGER NOT NULL,
    CONTENT BLOB,
    PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX RESOURCES_NAME_INX ON RESOURCES(NAME);
-- Inserto el firmware por default
INSERT INTO RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES('1', 'comandosVe', 0, $FILE{/resources/firmwares/comandosVe.xml});
INSERT INTO RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES('2', 'comandosDo', 0, $FILE{/resources/firmwares/comandosDo.xml});
INSERT INTO RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES('3', 'comandosPa', 0, $FILE{/resources/firmwares/comandosPa.xml});
INSERT INTO RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES('4', 'comandosCw', 0, $FILE{/resources/firmwares/comandosPa.xml});

CREATE TABLE COUNTRIES(
	ID INTEGER NOT NULL,
	DESCRIPTION VARCHAR(1024) NOT NULL,
	PRIMARY KEY (ID)
);

INSERT INTO COUNTRIES VALUES (1,'Venezuela');
INSERT INTO COUNTRIES VALUES (2,'Panama');
INSERT INTO COUNTRIES VALUES (3,'Republica Dominicana');
INSERT INTO COUNTRIES VALUES (4,'Curacao');

CREATE TABLE EQUIPMENTS (
	 ID INTEGER NOT NULL,
     BRAND VARCHAR(256) NOT NULL,
	 MODEL VARCHAR(256) NOT NULL,
	 MACHINE_REGISTER VARCHAR(45) NOT NULL,
	 MACHINE_SERIE VARCHAR(45) NOT NULL,
	 VERSION_FIRMWARE VARCHAR(256) NOT NULL,
	 PAPEL_QUANTITY DOUBLE PRECISION NOT NULL,
     ID_FISCAL VARCHAR(256) NOT NULL,
	 CONTRY_ID INTEGER NOT NULL,
	 PRIMARY KEY (ID),
	 CONSTRAINT COUNTRY_ID_FK7 FOREIGN KEY (CONTRY_ID) REFERENCES COUNTRIES(ID)
);
-- Inserto los tipos de equipos
INSERT INTO EQUIPMENTS VALUES (1, 'BIXOLON', 'SRP-350', 'Z1B8000001', '8008000001','1.0.0.1',300.0,'J-312171197',1);
INSERT INTO EQUIPMENTS VALUES (2, 'DASCOM', 'DT-230', '980918', '980918','2.0.0.1',300.0,'20938183821',3);
INSERT INTO EQUIPMENTS VALUES (3, 'START', 'HSP-7000', 'TFST111234567', 'TFST111234567','1.0.0.4',300.0,'1234567890 DV12',2);

CREATE TABLE FLAGS(
	ID INTEGER NOT NULL,
    VALUE_INT INTEGER NOT NULL,
	DESCRIPTION VARCHAR(1024) NOT NULL,
	Equipment_Id INTEGER NOT NULL,
	PRIMARY KEY (ID,Equipment_Id),
	CONSTRAINT EQUIPO_ID_FK5 FOREIGN KEY (Equipment_Id) REFERENCES EQUIPMENTS(ID)
);
-- Inserto los 49 flags por default
INSERT INTO FLAGS VALUES (0,0,'Condicion de Imprimir los mensajes de error',1);
INSERT INTO FLAGS VALUES (1,0,'Condicion de imprimir al final o linea a linea',1);
INSERT INTO FLAGS VALUES (2,0,'Condicion de corte con cutter o manual',1);
INSERT INTO FLAGS VALUES (3,0,'Uso interno',1);
INSERT INTO FLAGS VALUES (4,0,'Tamano de la fuente de PLU',1);
INSERT INTO FLAGS VALUES (5,0,'Tamano de la fuente para los DNF',1);
INSERT INTO FLAGS VALUES (6,0,'condicion de imprimir subtotales en los reportes',1);
INSERT INTO FLAGS VALUES (7,0,'Precio en el display no incluye tasa en Base Imponible',1);
INSERT INTO FLAGS VALUES (8,0,'Redondeo (5/4) en los precios de los PLU',1);
INSERT INTO FLAGS VALUES (9,0,'Redondeo (5/4) en los totales de las facturas',1);

CREATE TABLE Cashier(
	Id_Cashier INTEGER NOT NULL,
    Name VARCHAR(1024) NOT NULL,
	Pass VARCHAR(1024) NOT NULL,
	Equipment_Id INTEGER NOT NULL,
	PRIMARY KEY (Id_Cashier,Equipment_Id),
	CONSTRAINT EQUIPO_ID_FK1 FOREIGN KEY (Equipment_Id) REFERENCES EQUIPMENTS(ID)
);
--Inserto los 32 cajeros por default
INSERT INTO Cashier VALUES (0,'','',1);
INSERT INTO Cashier VALUES (1,'','',1);
INSERT INTO Cashier VALUES (2,'','',1);
INSERT INTO Cashier VALUES (3,'','',1);
INSERT INTO Cashier VALUES (4,'','',1);
INSERT INTO Cashier VALUES (5,'','',1);
INSERT INTO Cashier VALUES (6,'','',1);
INSERT INTO Cashier VALUES (7,'','',1);
INSERT INTO Cashier VALUES (8,'','',1);
INSERT INTO Cashier VALUES (9,'','',1);
INSERT INTO Cashier VALUES (10,'','',1);
INSERT INTO Cashier VALUES (11,'','',1);
INSERT INTO Cashier VALUES (12,'','',1);
INSERT INTO Cashier VALUES (13,'','',1);
INSERT INTO Cashier VALUES (14,'','',1);
INSERT INTO Cashier VALUES (15,'','',1);
INSERT INTO Cashier VALUES (16,'','',1);
INSERT INTO Cashier VALUES (17,'','',1);
INSERT INTO Cashier VALUES (18,'','',1);
INSERT INTO Cashier VALUES (19,'','',1);
INSERT INTO Cashier VALUES (20,'','',1);
INSERT INTO Cashier VALUES (21,'','',1);
INSERT INTO Cashier VALUES (22,'','',1);
INSERT INTO Cashier VALUES (23,'','',1);
INSERT INTO Cashier VALUES (24,'','',1);
INSERT INTO Cashier VALUES (25,'','',1);
INSERT INTO Cashier VALUES (26,'','',1);
INSERT INTO Cashier VALUES (27,'','',1);
INSERT INTO Cashier VALUES (28,'','',1);
INSERT INTO Cashier VALUES (29,'','',1);
INSERT INTO Cashier VALUES (30,'','',1);
INSERT INTO Cashier VALUES (31,'','',1);

CREATE TABLE MeanPayment(
	Id_mean INTEGER NOT NULL,
	DESCRIPTION VARCHAR(1024) NOT NULL,
	Amount DOUBLE PRECISION NOT NULL,
	Equipment_Id INTEGER NOT NULL,
	PRIMARY KEY (Id_mean,Equipment_Id),
	CONSTRAINT EQUIPO_ID_FK2 FOREIGN KEY (Equipment_Id) REFERENCES EQUIPMENTS(ID)
);
-- Inserto los 16 medios de pagos por default
INSERT INTO MeanPayment VALUES (1,'EFECTIVO 1',0.0,1);
INSERT INTO MeanPayment VALUES (2,'EFECTIVO 2',0.0,1);
INSERT INTO MeanPayment VALUES (3,'EFECTIVO 3',0.0,1);
INSERT INTO MeanPayment VALUES (4,'EFECTIVO 4',0.0,1);
INSERT INTO MeanPayment VALUES (5,'CHEQUE 1',0.0,1);
INSERT INTO MeanPayment VALUES (6,'CHEQUE 2',0.0,1);
INSERT INTO MeanPayment VALUES (7,'CHEQUE 3',0.0,1);
INSERT INTO MeanPayment VALUES (8,'CHEQUE 4',0.0,1);
INSERT INTO MeanPayment VALUES (9,'TARJETA 1',0.0,1);
INSERT INTO MeanPayment VALUES (10,'TARJETA 2',0.0,1);
INSERT INTO MeanPayment VALUES (11,'TARJETA 3',0.0,1);
INSERT INTO MeanPayment VALUES  (12,'TARJETA 4',0.0,1);
INSERT INTO MeanPayment VALUES (13,'TICKET 1',0.0,1);
INSERT INTO MeanPayment VALUES (14,'TICKET 2',0.0,1);
INSERT INTO MeanPayment VALUES (15,'TICKET 3',0.0,1);
INSERT INTO MeanPayment VALUES (16,'TICKET 4',0.0,1);

CREATE TABLE TAXES (
    ID VARCHAR(256) NOT NULL,
    NOMBRE VARCHAR(1024) NOT NULL,
    CATEGORY VARCHAR(256) NOT NULL,
    CUSTCATEGORY VARCHAR(256),
    PARENTID VARCHAR(256),
    RATE DOUBLE PRECISION NOT NULL,
    RATECASCADE INTEGER NOT NULL,    
    RATEORDER INTEGER,
    Equipment_Id INTEGER NOT NULL,
    PRIMARY KEY(ID,Equipment_Id),
    CONSTRAINT EQUIPO_ID_FK3 FOREIGN KEY (Equipment_Id) REFERENCES EQUIPMENTS(ID)
);
 --SMALLINT DEFAULT 0 NOT NULL,

CREATE UNIQUE INDEX TAXES_NAME_INX ON TAXES(NAME);
INSERT INTO TAXES(ID, NAME, CATEGORY, CUSTCATEGORY, PARENTID, RATE, RATECASCADE, RATEORDER, Equipment_Id) VALUES ('0', 'Tasa E', '000', NULL, NULL, 0.0, 0,0,1);
INSERT INTO TAXES(ID, NAME, CATEGORY, CUSTCATEGORY, PARENTID, RATE, RATECASCADE, RATEORDER, Equipment_Id) VALUES ('1', 'Tasa G', '001', NULL, NULL, 0.12, 0, 0,1);
INSERT INTO TAXES(ID, NAME, CATEGORY, CUSTCATEGORY, PARENTID, RATE, RATECASCADE, RATEORDER, Equipment_Id) VALUES ('2', 'Tasa R', '002', NULL, NULL, 0.08, 0, 0,1);
INSERT INTO TAXES(ID, NAME, CATEGORY, CUSTCATEGORY, PARENTID, RATE, RATECASCADE, RATEORDER, Equipment_Id) VALUES ('3', 'Tasa A', '003', NULL, NULL, 0.22, 0, 0,1);

CREATE TABLE FooterHeader(
	Equipment_id INTEGER NOT NULL,
	E1 VARCHAR(256),
	E2 VARCHAR(256),
	E3 VARCHAR(256),
	E4 VARCHAR(256),
	E5 VARCHAR(256),
	E6 VARCHAR(256),
	E7 VARCHAR(256),
	E8 VARCHAR(256),
	P1 VARCHAR(256),
	P2 VARCHAR(256),
	P3 VARCHAR(256),
	P4 VARCHAR(256),
	P5 VARCHAR(256),
	P6 VARCHAR(256),
	P7 VARCHAR(256),
	P8 VARCHAR(256),
	PRIMARY KEY(Equipment_id),
    CONSTRAINT EQUIPO_ID_FK4 FOREIGN KEY (Equipment_id) REFERENCES EQUIPMENTS(ID)
);

INSERT INTO FooterHeader VALUES(1,'The Factory HKA C.A','La California Norte','Caracas - Miranda', 'Telefono: (0058)-0212-2375253','','','','','Gracias por Comprar!!!','','','','','','','');

CREATE TABLE CLOSEDCASH (
    MONEY VARCHAR(256) NOT NULL,
    HOST VARCHAR(1024) NOT NULL,
    HOSTSEQUENCE INTEGER NOT NULL,
    DATESTART TIMESTAMP NOT NULL,
    DATEEND TIMESTAMP,
	Equipment_id INTEGER NOT NULL,
    PRIMARY KEY(MONEY),
	CONSTRAINT EQUIPO_ID_FK47 FOREIGN KEY (Equipment_id) REFERENCES EQUIPMENTS(ID)
);
CREATE INDEX CLOSEDCASH_INX_1 ON CLOSEDCASH(DATESTART);
CREATE UNIQUE INDEX CLOSEDCASH_INX_SEQ ON CLOSEDCASH(HOST, HOSTSEQUENCE);

CREATE TABLE ATTRIBUTESETINSTANCE (
    ID VARCHAR(256) NOT NULL,
    ATTRIBUTESET_ID VARCHAR(256) NOT NULL,
    DESCRIPTION VARCHAR(1024),
    PRIMARY KEY (ID)
);


CREATE TABLE RECEIPTS (
    ID VARCHAR(256) NOT NULL,
    MONEY VARCHAR(256) NOT NULL,
    DATENEW TIMESTAMP NOT NULL,
    ATTRIBUTES BLOB,
    PRIMARY KEY(ID),
    CONSTRAINT RECEIPTS_FK_MONEY FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY)
);
CREATE INDEX RECEIPTS_INX_1 ON RECEIPTS(DATENEW);

CREATE TABLE TICKETS (
    RECEIPTSID VARCHAR(256) NOT NULL,
    TICKETTYPE INTEGER DEFAULT 0 NOT NULL,
    TICKETID INTEGER NOT NULL,
    PERSON VARCHAR(256) NOT NULL,
    CUSTOMER VARCHAR(256),
    STATUS INTEGER DEFAULT 0 NOT NULL,
    PRIMARY KEY (RECEIPTSID),
    CONSTRAINT TICKETS_FK_ID FOREIGN KEY (RECEIPTSID) REFERENCES RECEIPTS(ID)
);
CREATE INDEX TICKETS_TICKETID ON TICKETS(TICKETTYPE, TICKETID);

CREATE TABLE TICKETLINES (
    TICKET VARCHAR(256) NOT NULL,
    LINE INTEGER NOT NULL,
    PRODUCT VARCHAR(256),
    ATTRIBUTESETINSTANCE_ID VARCHAR(256),
    UNITS DOUBLE PRECISION NOT NULL,
    PRICE DOUBLE PRECISION NOT NULL,
    TAXID VARCHAR(256) NOT NULL,
    ATTRIBUTES VARCHAR(256),
    PRIMARY KEY (TICKET, LINE),
    CONSTRAINT TICKETLINES_FK_TICKET FOREIGN KEY (TICKET) REFERENCES TICKETS(RECEIPTSID),
    CONSTRAINT TICKETLINES_FK_3 FOREIGN KEY (TAXID) REFERENCES TAXES(ID)
);
 --CONSTRAINT TICKETLINES_FK_TICKET FOREIGN KEY (TICKET) REFERENCES TICKETS(ID),
   -- CONSTRAINT TICKETLINES_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
   -- CONSTRAINT TICKETLINES_FK_3 FOREIGN KEY (TAXID) REFERENCES TAXES(ID)

CREATE TABLE TICKETSNUM (ID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1));
INSERT INTO TICKETSNUM VALUES (DEFAULT);
CREATE TABLE TICKETSNUM_REFUND (ID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1));
INSERT INTO TICKETSNUM_REFUND VALUES (DEFAULT);
CREATE TABLE TICKETSNUM_PAYMENT (ID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1));
INSERT INTO TICKETSNUM_PAYMENT VALUES (DEFAULT);

CREATE TABLE PAYMENTS (
    ID VARCHAR(256) NOT NULL,
    RECEIPT VARCHAR(256) NOT NULL,
    PAYMENT INTEGER NOT NULL,
    TOTAL DOUBLE PRECISION NOT NULL,
    TRANSID VARCHAR(1024),
    RETURNMSG BLOB,
    PRIMARY KEY (ID),
    CONSTRAINT PAYMENTS_FK_RECEIPT FOREIGN KEY (RECEIPT) REFERENCES RECEIPTS(ID),
	CONSTRAINT PAYMENTS_FK_MEDIOS FOREIGN KEY (PAYMENT) REFERENCES MEDIOS_PAGO(ID)
);
CREATE INDEX PAYMENTS_INX_1 ON PAYMENTS(PAYMENT);

CREATE TABLE TAXLINES (
    ID VARCHAR(256) NOT NULL,
    RECEIPT VARCHAR(256) NOT NULL,
    TAXID VARCHAR(256) NOT NULL,
    BASE DOUBLE PRECISION NOT NULL,
    AMOUNT DOUBLE PRECISION NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT TAXLINES_TAX FOREIGN KEY (TAXID) REFERENCES TAXES(ID),
    CONSTRAINT TAXLINES_RECEIPT FOREIGN KEY (RECEIPT) REFERENCES RECEIPTS(ID)
);

CREATE TABLE LINES_CUSTOMER(
	LINE INTEGER NOT NULL,
	TICKET_ID VARCHAR(256) NOT NULL,
	DESCRIPTION VARCHAR(256) NOT NULL,
	PRIMARY KEY (LINEA, TICKET_ID),
    CONSTRAINT TICKETS_FK_1 FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(ID)
);

CREATE TABLE CONTENT_NOT_FISCAL(
	TICKET_ID VARCHAR(256) NOT NULL,
	LINE INTEGER NOT NULL,
	TEXT VARCHAR(1024) NOT NULL,
	PRIMARY KEY (TICKET_ID, LINE),
	CONSTRAINT TICKETLINES_FK_TICKET2 FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(ID)
);

CREATE TABLE Adjustment (
	ID VARCHAR(256) NOT NULL,
	DENOMINATION VARCHAR(20) NOT NULL,
	AMOUNT DOUBLE PRECISION NOT NULL,
	MONEY VARCHAR(256) NOT NULL,
	CONSTRAINT AJUSTE_FK_ID FOREIGN KEY (ID) REFERENCES TICKETS(ID),
	CONSTRAINT AJUSTE_FK_MONEY FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY)
);